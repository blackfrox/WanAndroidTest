apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.wanandroidtest"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //ui
    implementation "com.android.support:cardview-v7:27.1.1"
    implementation "com.scwang.smartrefresh:SmartRefreshLayout:$rootProject.smartrefreshVersion"
    implementation "com.scwang.smartrefresh:SmartRefreshHeader:$rootProject.smartrefreshVersion"
    implementation "com.youth.banner:banner:$rootProject.bannerVersion"
    implementation "com.flyco.tablayout:FlycoTabLayout_Lib:$rootProject.tablayoutVersion"
    implementation "q.rorbin:VerticalTabLayout:$rootProject.verticalTabLayoutVersion"
    implementation "com.hyman:flowlayout-lib:$rootProject.flowlayoutVersion"
    implementation 'com.just.agentweb:agentweb:4.0.2' //webView使用
    implementation "com.github.githubwing:ByeBurger:$rootProject.ByeBurgerVersion" //bottomNavView

    //other
    implementation "com.airbnb.android:lottie:$rootProject.lottieVersion"
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'
    implementation "me.yokeyword:fragmentation:$rootProject.fragmentationVersion"
    implementation "me.yokeyword:fragmentation-swipeback:$rootProject.fragmentationVersion"
//    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.4'
//    implementation "com.orhanobut:logger:$rootProject.loggerVersion"
    //tools
    implementation 'org.jetbrains.anko:anko:0.10.1'
    //net
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    //noinspection GradleDependency
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    //canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"
    //db
    implementation 'org.litepal.android:core:1.5.0'
    //di
//    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
//    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
//    implementation "org.glassfish:javax.annotation:$rootProject.javaxVersion"
    //dagger2
    implementation 'com.google.dagger:dagger:2.15'
    kapt 'com.google.dagger:dagger-compiler:2.15'
    //(官方的依赖不能build)必须写kapt，顺便在外层添加 apply plugin: 'kotlin-kapt'
//    compileOnly 'org.glassfish:javax.annotation:10.0-b28' //不知道有什么用，好像kotlin中已经内置了该包

//    implementation 'com.google.dagger:dagger-android:2.14.1'
//    implementation 'com.google.dagger:dagger-android-support:2.14.1'
//    // if you use the support libraries
//    annotationProcessor 'com.google.dagger:dagger-android-processor:2.14.1'
    //rx
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rootProject.rxbindingVersion"
    implementation "com.tbruyelle.rxpermissions2:rxpermissions:$rootProject.rxpermissionsVersion"

}
//是在dagger2中kapt，现在用kotlin_kapt代替
//kapt{
//    generateStubs= true
//}

